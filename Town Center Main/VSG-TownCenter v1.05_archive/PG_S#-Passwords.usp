/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Pulse Group (pulsegroupb2b.com)
System Name: XMl-Communicator
System Number: 1.0
Programmer: Jason Clift (jason@pulsegroupb2b.com)
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #DEFINE_CONSTANT
// #CATEGORY "" 
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
#OUTPUT_SHIFT  0
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#print_to_trace
#ENCODING_ASCII
//#ANALOG_SERIAL_EXPAND AllwithAny
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
//#INCLUDEPATH "C:\Pulse\Shared\Programming\Crestron\simpl#\Passwords\Passwords\bin"
#USER_SIMPLSHARP_LIBRARY "SS_Passwords"
//#USER_SIMPLSHARP_LIBRARY "XMLCommunicator"
Digital_Input SaveNewPassword;
Analog_Input UserID_NewPassword,TimeOut_Delay;
String_Input Password_to_Check[255],NewPassword[255];
digital_output Password_Valid, Password_InValid, Error;
string_output Error_Message;

Core Pass;

#HELP_BEGIN
This Password module uses C# to create and store passwords, the passwords are stored in NVRAM under
UserData-ProgramSlot#.xml, the passwords are Hashed so are unreadable inside the xml file.

Passwords can be anything, special characters/numbers/letters all are valid with this module,
the character limit is 255

If you have multiple of this module the password list is shared, however only the module that checked
the password will unlock.

To check a password send the password you wish to check on the Password_to_Check line

To create a new password
Enter a userid on UserID_NewPassword (any number between 1 and 65545) the system keeps track of passwords via this ID
Enter password on NewPassword Line.
Press SaveNewPassword

To Update a password enter the same userID as a previously created password and then follow the create
password steps

Timeout_Delay is to be entered in as Milliseconds, default timeout is 30 seconds

#HELP_END


Function RegDelegates()
{
	RegisterDelegate (Pass, StatusState, SetStatus);
	RegisterDelegate (Pass, PasswordErrorState, SetError);
}

callback function SetError(string Error)
{
	Password_Valid=0;
    Password_InValid=0; 
	//Error=0;
	Error_Message = Error;		
} 
callback function SetStatus(string status)
{
	if (status = "Valid") { Password_Valid = 1; Password_InValid=0; Error=0; }
	else if (status = "InValid") {Password_Valid=0; Password_InValid=1; Error=0;}
	else if (status = "Lock") {Password_Valid=0; Password_InValid=0; Error=0;}
}

PUSH SaveNewPassword
{
	if ((UserID_NewPassword > 0) && (NewPassword != ""))
	{
		Pass.SavePass(UserID_NewPassword,NewPassword);
	}
	else
	{
		Error=1;
		Error_Message = "UserID must be greater then 0 and Password can not be blank";
	}
}

change Password_to_Check
{
	Pass.CompairPass(Password_to_Check);
}
change Timeout_Delay
{
	Pass.SetTimeout(Timeout_Delay);
}
Function Main()
{
	RegDelegates();
	waitforinitializationcomplete();
	Pass.LoadFile();
}
